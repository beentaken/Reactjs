{"ast":null,"code":"import React from \"react\";\nimport { FormLabel, FormControl, FormGroup, FormControlLabel, FormHelperText, Checkbox } from \"@mui/icons-material\";\nimport { makeStyles } from '@mui/material/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  }\n}));\nexport const CheckboxesGroup = _ref => {\n  let {\n    props\n  } = _ref;\n} //const classes = useStyles();\n//const biooptions = props.biooptions;\n//const [stateo, setStateo] = React.useState(\n//    biooptions.reduce((acc, option) => {\n//        acc[option.name] = option.bool;\n//        return acc;\n//    }, {})\n//);\n\n////const handleoChange = (event) => {\n////    setStateo({ ...stateo, [event.target.name]: event.target.checked });\n////};\n\n//const handleoChange = (event) => {\n//    setStateo((prevState) => ({\n//        ...prevState,\n//        [event.target.name]: event.target.checked,\n//    }));\n//};\n\n//const pickedCount = Object.values(stateo).filter((v) => v).length;\n//const oerror = pickedCount !== 2;\n\n//return (\n//    <div className={classes.root}>\n//        <FormControl\n//            required\n//            error={oerror}\n//            component=\"fieldset\"\n//            className={classes.formControl}\n//        >\n//            <FormLabel component=\"legend\">Pick two</FormLabel>\n//            <FormGroup style={{ flexDirection: \"row\" }}>\n//                {biooptions.map((option, index) => (\n//                    <FormControlLabel\n//                        key={option.id}\n//                        control={\n//                            <Checkbox\n//                                checked={stateo[option.name]}\n//                                onChange={handleoChange}\n//                                name={option.name}\n//                            />\n//                        }\n//                        label={\n//                            <span style={{ display: \"flex\", alignItems: \"center\" }}>\n//                                {option.name}\n//                                {option.icon && <option.icon />}\n//                            </span>\n//                        }\n//                    />\n//                ))}\n//            </FormGroup>\n//            <FormHelperText>\n//                {oerror\n//                    ? \"You must pick exactly two options.\"\n//                    : `Picked ${pickedCount} out of 2 options.`}\n//            </FormHelperText>\n//        </FormControl>\n//    </div>\n//);\n;\n_c = CheckboxesGroup;\nvar _c;\n$RefreshReg$(_c, \"CheckboxesGroup\");","map":{"version":3,"names":["React","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","makeStyles","useStyles","theme","root","display","formControl","margin","spacing","CheckboxesGroup","_ref","props","_c","$RefreshReg$"],"sources":["C:/Users/11070/source/repos/Reactjs/reactapp/src/checkbox/D2.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n    FormLabel,\r\n    FormControl,\r\n    FormGroup,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Checkbox,\r\n} from \"@mui/icons-material\";\r\n\r\nimport { makeStyles } from '@mui/material/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n    },\r\n}));\r\nexport const CheckboxesGroup = ({ props }) => {\r\n\r\n    //const classes = useStyles();\r\n    //const biooptions = props.biooptions;\r\n    //const [stateo, setStateo] = React.useState(\r\n    //    biooptions.reduce((acc, option) => {\r\n    //        acc[option.name] = option.bool;\r\n    //        return acc;\r\n    //    }, {})\r\n    //);\r\n\r\n    ////const handleoChange = (event) => {\r\n    ////    setStateo({ ...stateo, [event.target.name]: event.target.checked });\r\n    ////};\r\n\r\n    //const handleoChange = (event) => {\r\n    //    setStateo((prevState) => ({\r\n    //        ...prevState,\r\n    //        [event.target.name]: event.target.checked,\r\n    //    }));\r\n    //};\r\n\r\n\r\n    //const pickedCount = Object.values(stateo).filter((v) => v).length;\r\n    //const oerror = pickedCount !== 2;\r\n\r\n    //return (\r\n    //    <div className={classes.root}>\r\n    //        <FormControl\r\n    //            required\r\n    //            error={oerror}\r\n    //            component=\"fieldset\"\r\n    //            className={classes.formControl}\r\n    //        >\r\n    //            <FormLabel component=\"legend\">Pick two</FormLabel>\r\n    //            <FormGroup style={{ flexDirection: \"row\" }}>\r\n    //                {biooptions.map((option, index) => (\r\n    //                    <FormControlLabel\r\n    //                        key={option.id}\r\n    //                        control={\r\n    //                            <Checkbox\r\n    //                                checked={stateo[option.name]}\r\n    //                                onChange={handleoChange}\r\n    //                                name={option.name}\r\n    //                            />\r\n    //                        }\r\n    //                        label={\r\n    //                            <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n    //                                {option.name}\r\n    //                                {option.icon && <option.icon />}\r\n    //                            </span>\r\n    //                        }\r\n    //                    />\r\n    //                ))}\r\n    //            </FormGroup>\r\n    //            <FormHelperText>\r\n    //                {oerror\r\n    //                    ? \"You must pick exactly two options.\"\r\n    //                    : `Picked ${pickedCount} out of 2 options.`}\r\n    //            </FormHelperText>\r\n    //        </FormControl>\r\n    //    </div>\r\n    //);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,gBAAgB,EAChBC,cAAc,EACdC,QAAQ,QACL,qBAAqB;AAE5B,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAK,KAAM;EACrCC,IAAI,EAAE;IACFC,OAAO,EAAE;EACb,CAAC;EACDC,WAAW,EAAE;IACTC,MAAM,EAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC;EAC3B;AACJ,CAAC,CAAC,CAAC;AACH,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAAe;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAD,IAAA;AA+DzC,CAAC,CA7DG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAAAE,EAAA,GA/DYH,eAAe;AAAA,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}