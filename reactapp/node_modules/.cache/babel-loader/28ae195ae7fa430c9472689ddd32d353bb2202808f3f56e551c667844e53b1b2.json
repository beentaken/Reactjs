{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\11070\\\\source\\\\repos\\\\Reactjs\\\\reactapp\\\\src\\\\ui\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // Handle file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Handle file upload (e.g., to server)\n  const handleUpload = () => {\n    if (selectedFile) {\n      // Implement your upload logic here\n      console.log(\"Uploading:\", selectedFile);\n    } else {\n      alert(\"Please select a file first!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      accept: \"image/*\" // Specify file types\n      ,\n      style: {\n        display: 'none'\n      },\n      id: \"upload-button-file\",\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button-file\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"span\",\n        children: \"Select File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleUpload,\n      style: {\n        marginLeft: '10px'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected file: \", selectedFile.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","console","log","alert","children","accept","style","display","id","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","variant","component","color","onClick","marginLeft","name","_c","$RefreshReg$"],"sources":["C:/Users/11070/source/repos/Reactjs/reactapp/src/ui/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '@mui/material';\r\n\r\nconst FileUpload = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    // Handle file selection\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    // Handle file upload (e.g., to server)\r\n    const handleUpload = () => {\r\n        if (selectedFile) {\r\n            // Implement your upload logic here\r\n            console.log(\"Uploading:\", selectedFile);\r\n        } else {\r\n            alert(\"Please select a file first!\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* Hidden input for file selection */}\r\n            <input\r\n                accept=\"image/*\" // Specify file types\r\n                style={{ display: 'none' }}\r\n                id=\"upload-button-file\"     \r\n                type=\"file\"\r\n                onChange={handleFileChange}\r\n            />\r\n            <label htmlFor=\"upload-button-file\">\r\n                <Button variant=\"contained\" component=\"span\">\r\n                    Select File\r\n                </Button>\r\n            </label>\r\n\r\n            {/* Upload button */}\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleUpload}\r\n                style={{ marginLeft: '10px' }}\r\n            >\r\n                Upload\r\n            </Button>\r\n\r\n            {/* Display selected file name */}\r\n            {selectedFile && <p>Selected file: {selectedFile.name}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIN,YAAY,EAAE;MACd;MACAO,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,YAAY,CAAC;IAC3C,CAAC,MAAM;MACHS,KAAK,CAAC,6BAA6B,CAAC;IACxC;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,gBAEIb,OAAA;MACIc,MAAM,EAAC,SAAS,CAAC;MAAA;MACjBC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,EAAE,EAAC,oBAAoB;MACvBC,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAEd;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFvB,OAAA;MAAOwB,OAAO,EAAC,oBAAoB;MAAAX,QAAA,eAC/Bb,OAAA,CAACF,MAAM;QAAC2B,OAAO,EAAC,WAAW;QAACC,SAAS,EAAC,MAAM;QAAAb,QAAA,EAAC;MAE7C;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGRvB,OAAA,CAACF,MAAM;MACH2B,OAAO,EAAC,WAAW;MACnBE,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEnB,YAAa;MACtBM,KAAK,EAAE;QAAEc,UAAU,EAAE;MAAO,CAAE;MAAAhB,QAAA,EACjC;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRpB,YAAY,iBAAIH,OAAA;MAAAa,QAAA,GAAG,iBAAe,EAACV,YAAY,CAAC2B,IAAI;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEd,CAAC;AAACrB,EAAA,CAhDID,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}