{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\11070\\\\source\\\\repos\\\\Reactjs\\\\reactapp\\\\src\\\\ui\\\\Colordropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorDropdown = () => {\n  _s();\n  // Define the color array with their respective hex values\n  const colors = ['#FF0000',\n  // Red\n  '#00FF00',\n  // Green\n  '#0000FF',\n  // Blue\n  '#FFFF00',\n  // Yellow\n  '#800080' // Purple\n  ];\n\n  // State to manage the selected color\n  const [selectedColor, setSelectedColor] = useState('');\n\n  // Handle color selection\n  const handleColorSelect = event => {\n    setSelectedColor(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedColor,\n      onChange: handleColorSelect,\n      style: {\n        width: '60px',\n        height: '40px',\n        backgroundColor: selectedColor,\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        appearance: 'none',\n        WebkitAppearance: 'none',\n        MozAppearance: 'none',\n        padding: '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select a color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: color,\n        style: {\n          backgroundColor: color,\n          color: color // Hide text by setting the text color same as background\n        },\n        children: \"\\u25A0 \"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), selectedColor && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        fontSize: '18px'\n      },\n      children: [\"Selected Color: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: selectedColor\n        },\n        children: selectedColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(ColorDropdown, \"9zdFKVmh2gUVdGe0EAESwhRCnAA=\");\n_c = ColorDropdown;\nexport default ColorDropdown;\nvar _c;\n$RefreshReg$(_c, \"ColorDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ColorDropdown","_s","colors","selectedColor","setSelectedColor","handleColorSelect","event","target","value","children","onChange","style","width","height","backgroundColor","border","borderRadius","cursor","appearance","WebkitAppearance","MozAppearance","padding","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","color","index","marginTop","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/11070/source/repos/Reactjs/reactapp/src/ui/Colordropdown.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ColorDropdown = () => {\r\n    // Define the color array with their respective hex values\r\n    const colors = [\r\n        '#FF0000', // Red\r\n        '#00FF00', // Green\r\n        '#0000FF', // Blue\r\n        '#FFFF00', // Yellow\r\n        '#800080', // Purple\r\n    ];\r\n\r\n    // State to manage the selected color\r\n    const [selectedColor, setSelectedColor] = useState('');\r\n\r\n    // Handle color selection\r\n    const handleColorSelect = (event) => {\r\n        setSelectedColor(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* Dropdown menu displaying only color swatches */}\r\n            <select\r\n                value={selectedColor}\r\n                onChange={handleColorSelect}\r\n                style={{\r\n                    width: '60px',\r\n                    height: '40px',\r\n                    backgroundColor: selectedColor,\r\n                    border: '1px solid #ccc',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                    appearance: 'none',\r\n                    WebkitAppearance: 'none',\r\n                    MozAppearance: 'none',\r\n                    padding: '0',\r\n                }}\r\n            >\r\n                <option value=\"\" disabled>Select a color</option>\r\n                {colors.map((color, index) => (\r\n                    <option\r\n                        key={index}\r\n                        value={color}\r\n                        style={{\r\n                            backgroundColor: color,\r\n                            color: color, // Hide text by setting the text color same as background\r\n                        }}\r\n                    >\r\n                        &#x25A0; {/* Unicode for a square, to indicate the color */}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n\r\n            {/* Display the selected color's hex value */}\r\n            {selectedColor && (\r\n                <div style={{ marginTop: '20px', fontSize: '18px' }}>\r\n                    Selected Color: <span style={{ color: selectedColor }}>{selectedColor}</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ColorDropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAMC,MAAM,GAAG,CACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS,CAAE;EAAA,CACd;;EAED;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACjCF,gBAAgB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;EAED,oBACIT,OAAA;IAAAU,QAAA,gBAEIV,OAAA;MACIS,KAAK,EAAEL,aAAc;MACrBO,QAAQ,EAAEL,iBAAkB;MAC5BM,KAAK,EAAE;QACHC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAEX,aAAa;QAC9BY,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,SAAS;QACjBC,UAAU,EAAE,MAAM;QAClBC,gBAAgB,EAAE,MAAM;QACxBC,aAAa,EAAE,MAAM;QACrBC,OAAO,EAAE;MACb,CAAE;MAAAZ,QAAA,gBAEFV,OAAA;QAAQS,KAAK,EAAC,EAAE;QAACc,QAAQ;QAAAb,QAAA,EAAC;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAChDxB,MAAM,CAACyB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB9B,OAAA;QAEIS,KAAK,EAAEoB,KAAM;QACbjB,KAAK,EAAE;UACHG,eAAe,EAAEc,KAAK;UACtBA,KAAK,EAAEA,KAAK,CAAE;QAClB,CAAE;QAAAnB,QAAA,EACL;MACY,GAPJoB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQN,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGRvB,aAAa,iBACVJ,OAAA;MAAKY,KAAK,EAAE;QAAEmB,SAAS,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAtB,QAAA,GAAC,kBACjC,eAAAV,OAAA;QAAMY,KAAK,EAAE;UAAEiB,KAAK,EAAEzB;QAAc,CAAE;QAAAM,QAAA,EAAEN;MAAa;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzB,EAAA,CA5DID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA8DnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}