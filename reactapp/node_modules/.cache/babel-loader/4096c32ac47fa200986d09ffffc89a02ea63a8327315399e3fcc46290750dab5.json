{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WeiWenANG(SG)\\\\source\\\\repos\\\\Reactjs\\\\reactapp\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Keycloak from 'keycloak-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst keycloak = new Keycloak('./keycloak.json');\nkeycloak.init({\n  onLoad: 'login-required'\n}).then(async auth => {\n  if (auth) {\n    console.error(auth);\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this));\n  }\n}).catch(error => {\n  //keycloak errors only\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Authentication failed.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this), document.getElementById(\"root\"));\n  console.error(error);\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Keycloak","jsxDEV","_jsxDEV","keycloak","init","onLoad","then","auth","console","error","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","catch"],"sources":["C:/Users/WeiWenANG(SG)/source/repos/Reactjs/reactapp/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport Keycloak from 'keycloak-js';\r\n\r\nconst keycloak = new Keycloak('./keycloak.json');\r\n\r\nkeycloak\r\n    .init({ onLoad: 'login-required' })\r\n    .then(async auth => {\r\n        if (auth) {\r\n            console.error(auth);\r\n            const root = ReactDOM.createRoot(document.getElementById('root'));\r\n            root.render(\r\n                <React.StrictMode>\r\n                    <App />\r\n                </React.StrictMode>\r\n            );\r\n        }\r\n    })\r\n    .catch(error => { //keycloak errors only\r\n        ReactDOM.render(\r\n            <div>Authentication failed.</div>,\r\n            document.getElementById(\"root\")\r\n        );\r\n        console.error(error);\r\n    });\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,QAAQ,GAAG,IAAIH,QAAQ,CAAC,iBAAiB,CAAC;AAEhDG,QAAQ,CACHC,IAAI,CAAC;EAAEC,MAAM,EAAE;AAAiB,CAAC,CAAC,CAClCC,IAAI,CAAC,MAAMC,IAAI,IAAI;EAChB,IAAIA,IAAI,EAAE;IACNC,OAAO,CAACC,KAAK,CAACF,IAAI,CAAC;IACnB,MAAMG,IAAI,GAAGb,QAAQ,CAACc,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;IACjEH,IAAI,CAACI,MAAM,eACPZ,OAAA,CAACN,KAAK,CAACmB,UAAU;MAAAC,QAAA,eACbd,OAAA,CAACJ,GAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CACtB,CAAC;EACL;AACJ,CAAC,CAAC,CACDC,KAAK,CAACZ,KAAK,IAAI;EAAE;EACdZ,QAAQ,CAACiB,MAAM,eACXZ,OAAA;IAAAc,QAAA,EAAK;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,EACjCR,QAAQ,CAACC,cAAc,CAAC,MAAM,CAClC,CAAC;EACDL,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;AACxB,CAAC,CAAC;;AAGN;AACA;AACA;AACAV,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}