{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WeiWenANG(SG)\\\\source\\\\repos\\\\Reactjs\\\\reactapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      locals: [],\n      loading: true\n    };\n  }\n  componentDidMount() {\n    this.populateData();\n  }\n  static renderDataTable(_ref) {\n    let {\n      forecasts,\n      locals\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Continent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temp. (C)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temp. (F)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [forecasts.map(forecast => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.temperatureC\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.temperatureF\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, forecast.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)), locals.map(local => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: local.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: local.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: local.continent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: local.population\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: local.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, local.data, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: [\"Loading... Please refresh once the ASP.NET backend has started. See\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://aka.ms/jspsintegrationreact\",\n          children: \"https://aka.ms/jspsintegrationreact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), ' ', \"for more details.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: App.renderDataTable(this.state.forecasts, this.state.local)\n    }, void 0, false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tabelLabel\",\n        children: \"Weather forecast Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This component demonstrates fetching data from the server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), contents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n  async populateData() {\n    const responseweather = await fetch('weatherforecast');\n    const dataweather = await responseweather.json();\n    const responselocal = await fetch('location');\n    const datalocal = await responselocal.json();\n    this.setState({\n      forecasts: dataweather,\n      locals: datalocal,\n      loading: false\n    });\n  }\n}\nApp.displayName = App.name;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","state","forecasts","locals","loading","componentDidMount","populateData","renderDataTable","_ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","forecast","date","temperatureC","temperatureF","summary","local","country","continent","population","data","render","contents","href","id","responseweather","fetch","dataweather","json","responselocal","datalocal","setState","displayName","name"],"sources":["C:/Users/WeiWenANG(SG)/source/repos/Reactjs/reactapp/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { forecasts: [], locals: [], loading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateData();   \r\n    }\r\n\r\n    static renderDataTable({ forecasts, locals }) {\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Country</th>\r\n                        <th>Continent</th>\r\n                        <th>Population</th>\r\n                        <th>Summary</th>\r\n                        <th>Date</th>\r\n                        <th>Temp. (C)</th>\r\n                        <th>Temp. (F)</th>\r\n                        <th>Summary</th> \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {forecasts.map(forecast =>\r\n                        <tr key={forecast.date}>\r\n                            <td>{forecast.date}</td>\r\n                            <td>{forecast.temperatureC}</td>\r\n                            <td>{forecast.temperatureF}</td>\r\n                            <td>{forecast.summary}</td>\r\n                        </tr>\r\n                    )}\r\n                    {locals.map(local =>\r\n                        <tr key={local.data}>\r\n                            <td>{local.date}</td>\r\n                            <td>{local.country}</td>\r\n                            <td>{local.continent}</td>\r\n                            <td>{local.population}</td>\r\n                            <td>{local.summary}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading ? (\r\n            <p>\r\n                <em>\r\n                    Loading... Please refresh once the ASP.NET backend has started. See{' '}\r\n                    <a href=\"https://aka.ms/jspsintegrationreact\">https://aka.ms/jspsintegrationreact</a>{' '}\r\n                    for more details.\r\n                </em>\r\n            </p>\r\n        ) : (\r\n            <>\r\n                {App.renderDataTable(this.state.forecasts, this.state.local)}\r\n            </>\r\n        );\r\n        return (\r\n            <div>\r\n                <h1 id=\"tabelLabel\">Weather forecast Location</h1>\r\n                <p>This component demonstrates fetching data from the server.</p>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n    async populateData() {\r\n        const responseweather = await fetch('weatherforecast');\r\n        const dataweather = await responseweather.json();\r\n        const responselocal = await fetch('location');\r\n        const datalocal = await responselocal.json();\r\n        this.setState({ forecasts: dataweather, locals: datalocal, loading: false });\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}